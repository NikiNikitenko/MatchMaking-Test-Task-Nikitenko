services:
  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 1s
      retries: 30

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 5s
      timeout: 3s
      retries: 30

  matchmaking.service:
    build:
      context: .
      dockerfile: Dockerfile.service
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
      - Kafka__BootstrapServers=kafka:9092
      - Kafka__RequestTopic=matchmaking.request
      - Kafka__CompleteTopic=matchmaking.complete
      - ConnectionStrings__Redis=redis:6379
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  matchmaking.worker-1:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - Kafka__RequestTopic=matchmaking.request
      - Kafka__CompleteTopic=matchmaking.complete
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: on-failure

  matchmaking.worker-2:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - Kafka__RequestTopic=matchmaking.request
      - Kafka__CompleteTopic=matchmaking.complete
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: on-failure
